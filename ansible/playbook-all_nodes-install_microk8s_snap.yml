---
- name: 'Install microk8s via snap'
  hosts: 'all'
  gather_facts: true
  become: true

  tasks:

    - name: 'Install snap package'
      ansible.builtin.apt:
        name: snap
        update_cache: true

    - name: 'Install microk8s'
      community.general.snap:
        name: microk8s
        classic: true
      register: microk8s_installation
      until: 'not microk8s_installation.failed | bool'
      retries: 19
      delay: 30

    - name: 'Add vagrant user to microk8s group'
      ansible.builtin.user:
        name: 'vagrant'
        groups:
          - 'microk8s'
        append: true

    #
    # microk8s addons
    #

    - name: 'Check microk8s hostpath-storage status'
      ansible.builtin.command:
        cmd: 'microk8s status -a hostpath-storage'
      changed_when: false
      failed_when: false
      register: microk8s_hostpath_storage_status

    - name: 'Enable microk8s hostpath-storage addon'
      ansible.builtin.command:
        cmd: 'microk8s enable hostpath-storage'
      when:
        - not microk8s_hostpath_storage_status.stdout == "enabled"

    - name: 'Check microk8s ingress status'
      ansible.builtin.command:
        cmd: 'microk8s status -a ingress'
      changed_when: false
      failed_when: false
      register: microk8s_ingress_status

    - name: 'Enable microk8s ingress addon'
      ansible.builtin.command:
        cmd: 'microk8s enable ingress'
      when:
        - not microk8s_ingress_status.stdout == "enabled"

    #
    # kubeconfig
    #

    - name: 'Check if we already have a microk8s-kubeconfig file'
      ansible.builtin.stat:
        path: 'microk8s-kubeconfig'
      delegate_to: 'localhost'
      become: false
      register: does_k3s_kubeconfig_exist

    - name: 'Fetch kubeconfig to Ansible control node'
      ansible.builtin.fetch:
        src: '/var/snap/microk8s/current/credentials/client.config'
        dest: 'microk8s-kubeconfig'
        mode: '0600'
        flat: true
      when:
        - 'not does_k3s_kubeconfig_exist.stat.exists | bool'

    - name: 'Check if we now have a microk8s-kubeconfig file'
      ansible.builtin.stat:
        path: 'microk8s-kubeconfig'
      delegate_to: 'localhost'
      become: false
      register: does_k3s_kubeconfig_exist_now

    - name: 'Fix permissions on microk8s-kubeconfig'
      ansible.builtin.file:
        path: 'microk8s-kubeconfig'
        mode: '0600'
      delegate_to: 'localhost'
      become: false
      when:
        - 'does_k3s_kubeconfig_exist_now.stat.exists | bool'

    - name: 'Change server IP in kubeconfig file to external_ip (or the default IPv4 address)'
      ansible.builtin.lineinfile:
        path: 'microk8s-kubeconfig'
        regexp: '(\s*)server: https://127.0.0.1:(.*)'
        line: '\1server: https://{{ external_ip | default(hostvars[inventory_hostname]["ansible_default_ipv4"]["address"]) }}:\2'
        backrefs: true
      delegate_to: 'localhost'
      become: false
      ignore_errors: "{{ ansible_check_mode }}"
